{
  "permissions": {
    "allow": [
      "Bash(timeout 10s npm run dev)",
      "Bash(lsof:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(kill:*)",
      "Bash(node:*)",
      "Read(//Users/chetanmahajan/Documents/nodejs_backend/**)",
      "Bash(flutter packages pub run build_runner build:*)",
      "Bash(flutter run:*)",
      "Bash(nc:*)",
      "Bash(/dev/null)",
      "Bash(flutter clean:*)",
      "Bash(flutter pub:*)",
      "Bash(tree:*)",
      "Bash(xargs kill:*)",
      "Read(//dev/**)",
      "Bash(tr:*)",
      "Bash(git checkout -- src/services/subscriptionService.ts)",
      "Bash(npm run build:*)",
      "Bash(PORT=3001 npm run dev)",
      "Bash(PORT=3002 npm run dev)",
      "Bash(PORT=3003 npm run dev)",
      "Bash(PORT=3004 npm run dev)",
      "Bash(PORT=3005 npm run dev)",
      "Bash(npm run migration:show:*)",
      "Bash(npm run migration:run:*)",
      "Bash(PGPASSWORD=\"$DB_PASSWORD\" psql -h \"$DB_HOST\" -U \"$DB_USERNAME\" -d \"$DB_NAME\" -c \"\\d parking_lot\")",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(PGPASSWORD=\"$DB_PASSWORD\" psql -h \"$DB_HOST\" -U \"$DB_USERNAME\" -d \"$DB_NAME\" -c \"SELECT email, role, verified FROM \"\"user\"\" WHERE role = ''admin'' LIMIT 5;\")",
      "Read(//Users/chetanmahajan/Documents/smart-parking-go/**)",
      "Bash(brew install:*)",
      "Bash(mkdir:*)",
      "Bash(make:*)",
      "Bash(cd:*)",
      "Bash(tar:*)",
      "Bash(ls:*)",
      "Bash(export PATH=$HOME/go-install/go/bin:$PATH)",
      "Bash(go:*)",
      "Bash(export GOPATH=$HOME/go)",
      "Bash(docker:*)",
      "Bash(chmod:*)",
      "Bash(./setup.sh:*)",
      "Bash(timeout:*)",
      "Read(//Applications/**)",
      "Bash(open:*)",
      "Bash(/usr/local/bin/docker --version)",
      "Bash(export:*)",
      "Bash(find:*)",
      "Bash(npm run create:superadmin:*)",
      "Bash(npm run migration:generate:*)",
      "Bash(npx typeorm-ts-node-commonjs migration:generate:*)",
      "Bash(git checkout:*)",
      "Bash(npm run seed:plans:*)",
      "Bash(git commit:*)",
      "Bash(PGPASSWORD=\"$DB_PASSWORD\" psql -h \"$DB_HOST\" -U \"$DB_USERNAME\" -d \"$DB_NAME\" -c \"SELECT id, status, detected_at, distance, percentage, battery_level, created_at FROM parking_status_log WHERE parking_slot_id = ''2e9f8379-cecc-468d-b290-51208d7faf04'' ORDER BY detected_at DESC LIMIT 10;\")",
      "Bash(grep:*)",
      "Bash(PGPASSWORD=\"$DB_PASSWORD\" psql -h \"$DB_HOST\" -U \"$DB_USERNAME\" -d \"$DB_NAME\" -c \"SELECT COUNT(*) as orphaned_records FROM parking_status_log psl WHERE NOT EXISTS (SELECT 1 FROM parking_slot ps WHERE ps.id = psl.\"\"parkingSlotId\"\");\")",
      "Bash(pkill:*)",
      "Bash(PGPASSWORD=\"$DB_PASSWORD\" psql -h \"$DB_HOST\" -U \"$DB_USERNAME\" -d \"$DB_NAME\" -c \"SELECT id, \"\"chirpstackDeviceId\"\", name, \"\"parkingSlotId\"\" FROM node WHERE \"\"chirpstackDeviceId\"\" = ''0102030405060788'' LIMIT 5;\")",
      "Bash(bash:*)",
      "Bash(npm install:*)",
      "Bash(PGPASSWORD=\"$DB_PASSWORD\" psql -h \"$DB_HOST\" -U \"$DB_USERNAME\" -d \"$DB_NAME\" -c \"SELECT ps.id, ps.name, ps.status, ps.\"\"lastDistanceCm\"\", ps.\"\"lastGatewayId\"\", ps.\"\"lastSensorState\"\", n.\"\"chirpstackDeviceId\"\" FROM parking_slot ps LEFT JOIN node n ON n.\"\"parkingSlotId\"\" = ps.id WHERE ps.\"\"floorId\"\" IN (SELECT id FROM floor WHERE \"\"parkingLotId\"\" IN (SELECT id FROM parking_lot WHERE \"\"chirpstackApplicationId\"\" = ''031709f4-457f-4e1c-a446-b9780838d050'')) LIMIT 5;\")",
      "Bash(cat:*)",
      "Bash(PGPASSWORD=\"$DB_PASSWORD\" psql -h \"$DB_HOST\" -U \"$DB_USERNAME\" -d \"$DB_NAME\" -c \"SELECT id, name, \"\"chirpstackApplicationId\"\", \"\"isActive\"\" FROM parking_lot WHERE \"\"chirpstackApplicationId\"\" = ''031709f4-457f-4e1c-a446-b9780838d050'';\")"
    ],
    "deny": [],
    "ask": []
  }
}