apiVersion: apps/v1
kind: Deployment
metadata:
  name: smart-parking-backend
  namespace: smart-parking
  labels:
    app: smart-parking-backend
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: smart-parking-backend
  template:
    metadata:
      labels:
        app: smart-parking-backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      # Security context for pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault

      # Service account
      serviceAccountName: smart-parking-backend

      # Init container for database migrations
      initContainers:
        - name: db-migration
          image: your-registry/smart-parking-backend:latest
          imagePullPolicy: IfNotPresent
          command: ["npm", "run", "migration:run"]
          envFrom:
            - configMapRef:
                name: smart-parking-config
            - secretRef:
                name: smart-parking-secrets
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false

      containers:
        - name: smart-parking-backend
          image: your-registry/smart-parking-backend:latest
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 3000
              protocol: TCP

          # Environment variables from ConfigMap and Secret
          envFrom:
            - configMapRef:
                name: smart-parking-config
            - secretRef:
                name: smart-parking-secrets

          # Resource limits and requests
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"

          # Liveness probe
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3

          # Readiness probe
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          # Startup probe
          startupProbe:
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30

          # Security context for container
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001

          # Volume mounts
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: tmp
              mountPath: /tmp

      # Volumes
      volumes:
        - name: logs
          emptyDir: {}
        - name: tmp
          emptyDir: {}

      # DNS policy
      dnsPolicy: ClusterFirst

      # Restart policy
      restartPolicy: Always

      # Termination grace period
      terminationGracePeriodSeconds: 30

      # Image pull secrets (if using private registry)
      # imagePullSecrets:
      #   - name: registry-secret

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: smart-parking-backend
  namespace: smart-parking
  labels:
    app: smart-parking-backend
automountServiceAccountToken: false

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: smart-parking-backend-pdb
  namespace: smart-parking
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: smart-parking-backend

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: smart-parking-backend-hpa
  namespace: smart-parking
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: smart-parking-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
        - type: Pods
          value: 2
          periodSeconds: 30
      selectPolicy: Max
