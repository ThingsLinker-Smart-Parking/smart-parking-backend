apiVersion: v1
kind: Secret
metadata:
  name: smart-parking-secrets
  namespace: smart-parking
  labels:
    app: smart-parking-backend
type: Opaque
stringData:
  # Database Credentials
  # IMPORTANT: Replace these with actual base64 encoded values before deployment
  # Example: echo -n 'your-password' | base64
  DB_USERNAME: "postgres"
  DB_PASSWORD: "your-db-password-here"

  # JWT Secret
  # Generate a strong secret: openssl rand -base64 32
  JWT_SECRET: "your-jwt-secret-here"
  SESSION_SECRET: "your-session-secret-here"

  # Webhook Secret
  WEBHOOK_SECRET: "your-webhook-secret-here"

  # Email Credentials
  EMAIL: "noreply@smartparking.com"
  EMAIL_PASSWORD: "your-email-password-here"

  # MQTT Credentials
  MQTT_USERNAME: "mqtt-user"
  MQTT_PASSWORD: "your-mqtt-password-here"

  # Cashfree Payment Gateway Credentials
  CASHFREE_CLIENT_ID: "your-cashfree-client-id"
  CASHFREE_CLIENT_SECRET: "your-cashfree-client-secret"

---
# Example of how to create secrets from command line:
# kubectl create secret generic smart-parking-secrets \
#   --from-literal=DB_USERNAME=postgres \
#   --from-literal=DB_PASSWORD=your-password \
#   --from-literal=JWT_SECRET=$(openssl rand -base64 32) \
#   --from-literal=SESSION_SECRET=$(openssl rand -base64 32) \
#   --from-literal=WEBHOOK_SECRET=$(openssl rand -base64 32) \
#   --from-literal=EMAIL=noreply@smartparking.com \
#   --from-literal=EMAIL_PASSWORD=your-email-password \
#   --from-literal=MQTT_USERNAME=mqtt-user \
#   --from-literal=MQTT_PASSWORD=your-mqtt-password \
#   --from-literal=CASHFREE_CLIENT_ID=your-client-id \
#   --from-literal=CASHFREE_CLIENT_SECRET=your-client-secret \
#   --namespace=smart-parking
